name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          unzip \
          openjdk-11-jdk \
          autoconf \
          automake \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libtinfo5 \
          cmake \
          libffi-dev \
          libssl-dev \
          python3-pip \
          python3-setuptools
          
    - name: Set up Java environment
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV
        echo "PATH=$PATH:/usr/lib/jvm/java-11-openjdk-amd64/bin" >> $GITHUB_ENV
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython
        pip install kivy==2.1.0
        
    - name: Create simple icons if missing
      run: |
        python -c "
import os
from PIL import Image, ImageDraw

# Create icon if not exists
if not os.path.exists('icon.png'):
    img = Image.new('RGB', (512, 512), color='blue')
    draw = ImageDraw.Draw(img)
    draw.text((200, 250), 'APP', fill='white')
    img.save('icon.png')
    print('Created icon.png')

# Create presplash if not exists  
if not os.path.exists('presplash.png'):
    img = Image.new('RGB', (800, 1280), color='lightblue')
    img.save('presplash.png')
    print('Created presplash.png')
        " || echo "Icon creation failed, continuing..."
        
    - name: Build APK with Buildozer
      run: |
        buildozer android debug
        
    - name: List generated files
      run: |
        echo "Generated files:"
        find . -name "*.apk" -type f
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: phone-limiter-apk
        path: |
          bin/*.apk
        if-no-files-found: warn
